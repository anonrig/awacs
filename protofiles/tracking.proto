syntax = "proto3";

service Applications {
  rpc findAll (AccountIdRequest) returns (ApplicationsResponse) {}
  rpc findOne (ApplicationIdRequest) returns (ApplicationResponse) {}
  rpc create (ApplicationRequest) returns (Empty) {}
  rpc update (ApplicationRequest) returns (Empty) {}
  rpc destroy (ApplicationIdRequest) returns (Empty) {}
}

service Events {
  rpc findAll(FindAllEventsRequest) returns (EventsResponse) {}
}

// Generics

message Empty {}

// Requests

message AccountIdRequest {
  string account_id = 1;
}

message ApplicationIdRequest {
  string account_id = 1;
  string application_id = 2;
}

message ApplicationRequest {
  string account_id = 1;
  string application_id = 2;
  string title = 3;
  int32 session_timeout = 4;
}

message FindAllEventsRequest {
  string account_id = 1;
  optional int32 limit = 2;
  optional string application_id = 3;
  optional string client_id = 4;
  optional EventCursor cursor = 5;
}

// Responses

message ApplicationResponse {
  Application row = 1;
}

message ApplicationsResponse {
  repeated Application rows = 1;
}

message EventsResponse {
  repeated Event rows = 1;
  optional EventCursor cursor = 2;
}

// Model definitions

message Application {
  string account_id = 1;
  string application_id = 2;
  string title = 3;
  bytes authorization_key = 4;
  bytes application_key = 5;
  bytes server_key = 6;
  int32 session_timeout = 7;
  bool is_active = 8;
  string created_at = 9;
  string updated_at = 10;
}

message Event {
  string account_id = 1;
  string application_id = 2;
  string client_id = 3;
  string title = 4;
  repeated EventProperties properties = 5;
  string session_started_at = 6;
  string created_at = 7;
}

message EventProperties {
  string key = 1;
  string value = 2;
}

message EventCursor {
  string created_at = 1;
}
