{{- if .Values.application.autoMigrate }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "chart.fullname" . }}-automigrate
  labels:
    {{ include "chart.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook-weight: "1"
    helm.sh/hook: "post-install, pre-upgrade"
    helm.sh/hook-delete-policy: "before-hook-creation"
spec:
  template:
    {{- with .Values.job.annotations }}
    metadata:
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    spec:
      automountServiceAccountToken: {{ .Values.job.automountServiceAccountToken }}
      initContainers:
        {{- if .Values.postgresql.enabled }}
        - name: pgchecker
          image: "{{ .Values.pgchecker.image.repository }}:{{ .Values.pgchecker.image.tag }}"
          imagePullPolicy: {{ .Values.pgchecker.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.pgchecker.securityContext | nindent 12 }}
          command:
            - sh
            - -c
            - |
              echo 'Waiting for PostgreSQL to become ready...'
              until printf "." && nc -z -w 2 {{ include "chart.fullname" . }}-postgresql {{ .Values.postgresql.service.port }}; do
                  sleep 2;
              done;
              echo 'PostgreSQL OK âœ“'
          resources:
            {{- toYaml .Values.pgchecker.resources | nindent 12 }}
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}-automigrate
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["./node_modules/knex/bin/cli.js", "migrate:latest", "--knexfile=src/knexfile.js"]
          envFrom:
            - secretRef:
                name: {{ include "chart.fullname" . }}-secrets
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
      restartPolicy: Never
  backoffLimit: 10
{{- end }}
